const userModel = require("../module/userModel");
const axios = require("axios");
const FormData = require("form-data");

const generateImage = async (req, res) => {
  try {
    const { userId, prompt } = req.body;

    // Validate user and prompt
    const user = await userModel.findById(userId);
    if (!user) {
      return res
        .status(404)
        .send({ success: false, message: "User not found!" });
    }
    if (!prompt) {
      return res
        .status(400)
        .send({ success: false, message: "Prompt is required!" });
    }

    // Check user's credit balance
    if (user.creditBalance === 0 || userModel.creditBalance <  0) {
      return res.status(403).send({
        success: false,
        message: "Not enough credits!",
        creditBalance: user.creditBalance,
      });
    }

    // Prepare form data
    const formData = new FormData();
    formData.append("prompt", prompt);

    // Call external API
    const { data } = await axios.post(
      `https://clipdrop-api.co/text-to-image/v1`,
      formData,
      {
        headers: {
          "x-api-key": process.env.CLIPDROP_API,
    
        },
        responseType: "arraybuffer",
      }
    );

    // Convert the response to a Base64 image
    const base64Image = Buffer.from(data, "binary").toString("base64");
    const resultImage = `data:image/png;base64,${base64Image}`;


    await userModel.findByIdAndUpdate(user._id, {
      creditBalance: user.creditBalance - 1,
    });

    // Respond with success
    res.json({
      success: true,
      message: "Image generated successfully!",
      creditBalance: user.creditBalance - 1,
      resultImage,
    });
  } catch (error) {
    console.error("Error generating image:", error.message);
    res.status(500).send({ success: false, message: "Server error" });
  }
};

module.exports = { generateImage };
